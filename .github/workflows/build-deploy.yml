name: CI
on:
  push:
    branches: [ "main" ]
jobs:
  setup:
    runs-on: ubuntu-latest
    outputs:
      target_env: ${{ steps.branch_check.outputs.environment }}
    steps:
      - name: Choose Environment
        id: branch_check
        run: echo "environment=Production" >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: [setup]
    environment:
      name: "${{ needs.setup.outputs.target_env }}"
    steps:
      - uses: actions/checkout@v4

      - name: Setup PHP
        id: setup-php
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'

      - name: Build the project
        run: |
          composer install
          vendor/bin/jigsaw build production

      - name: Set Build Directory
        id: set_build_directory
        run: echo "build_directory=./build_production" >> $GITHUB_OUTPUT

      - name: Sync with S3 Bucket
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: |
          echo "############### REMOVE OLD SITE ###############"
          aws s3 rm s3://${{ vars.S3_BUCKET }}/ --only-show-errors --recursive --region ${{ vars.S3_REGION }}
          echo "############### COPY ##########################"
          aws s3 cp ${{ steps.set_build_directory.outputs.build_directory }} s3://${{ vars.S3_BUCKET }} --only-show-errors --recursive --acl public-read --region ${{ vars.S3_REGION }}

      - name: Invalidate Cloudfront Cache
        env:
          AWS_ACCESS_KEY_ID: "${{ secrets.AWS_ACCESS_KEY_ID }}"
          AWS_SECRET_ACCESS_KEY: "${{ secrets.AWS_SECRET_ACCESS_KEY }}"
        run: |
          echo "############### CACHE INVALIDATION ##############"
          aws cloudfront create-invalidation --distribution-id E3GJ51VYLCVA9S --paths="/*" --region ${{ vars.S3_REGION }}
          aws cloudfront create-invalidation --distribution-id E2UD2V9B3SPYOH --paths="/*" --region ${{ vars.S3_REGION }}
